<?php declare (strict_types = 1);
%%%namespace%%%

trait %%%project%%%Trait
{
	//protected I%%%project%%%Factory $i%%%project%%%Factory; // PHP7.4 ready
	protected $i%%%project%%%Factory; // PHP7.3 ready

	public function inject%%%project%%%Interface(I%%%project%%%Factory $i%%%project%%%Factory): void
	{
		$this->i%%%project%%%Factory = $i%%%project%%%Factory;
	}

    public function createComponent%%%project%%%(): %%%project%%%Control
    {
        return $this->i%%%project%%%Factory->create();
    }

    protected function attachComponent%%%project%%%(%%%project%%%Control $component): void
    {
        $this->addComponent($component, '%%%project%%%');
    }

    public function get%%%project%%%Control(): %%%project%%%Control
    {
        return $this['%%%project%%%'];
    }
}
